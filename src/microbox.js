// Generated by CoffeeScript 1.6.3
var contains, microbox, parent,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

contains = function(haystack, needle) {
  return haystack.indexOf(needle > -1);
};

parent = function(element, filter) {
  var count, e, f, good, property, _continue;
  if (izzy['function'](filter)) {
    while (_continue(element)) {
      if (filter(element)) {
        return element;
      }
      element = element.parentNode;
    }
  } else {
    while (_continue(element)) {
      good = 0;
      count = 0;
      for (property in filter) {
        e = element[property];
        f = filter[property];
        if (contains(element[property], filter[property])) {
          ++good;
        }
        ++count;
      }
      if (count === good) {
        return element;
      }
      element = element.parentNode;
    }
  }
  _continue = function(element) {
    return !izzy.defined(element.documentElement) && element.tagName !== 'HTML';
  };
  return false;
};

microbox = (function() {
  var click, initialize, model, process;
  model = new umodel({
    processed: []
  });
  process = function(trigger) {
    var processed;
    processed = model.get('processed');
    if (__indexOf.call(processed, trigger) >= 0) {
      return;
    }
    return processed.push(trigger);
  };
  click = function(event) {
    var lightbox, rel, target;
    target = event.target;
    lightbox = parent(target, {
      rel: 'lightbox'
    });
    if (lightbox) {
      return rel = lightbox.rel;
    }
  };
  initialize = function() {
    return document.addEventListener('click', click);
  };
  return {
    initialize: initialize
  };
})();
